#include <iostream>
#include <string>
#include <vector>
#include <algorithm>
using namespace std;

vector<pair<char, int>> alpha;

int Find(char n)
{
	for (int i = 0; i < alpha.size(); ++i)
		if (alpha[i].first == n)
			return i;
	return -1;
}

bool cmp(pair<char, int> a, pair<char, int> b) 
{
	return a.second > b.second;
}

string Coding(string str) 
{
	for (int i = 0; i < str.length(); ++i) 
	{
		int index = Find(str[i]);
		if (index == -1)
			alpha.push_back({ str[i], 1 });
		else
			++alpha[index].second;
	}
	sort(alpha.begin(), alpha.end(), cmp);
	string cod = "";
	for (int i = 0; i < str.length(); ++i) 
	{
		int index = Find(str[i]);
		if (index == 0)
			cod += '0';
		else 
		{
			for (int i = 0; i < index; ++i)
				cod += '1';
			if (index < alpha.size() - 1)
				cod += '0';
		}
	}
	return cod;
}

string UnCoding(string cod) 
{
	if (alpha.size() == 0)
		return "";
	string str = "";
	int count = 0;
	for (int i = 0; i < cod.length(); ++i) 
	{
		if (cod[i] == '0')
		{
			str += alpha[count].first;
			count = 0;
		}
		else
			++count;
	}
	if (count != 0)
		str += alpha[count].first;
	return str;
}

int main() 
{
	string str, cod;
	getline(cin, str);
	cod = Coding(str);
	cout << cod << endl << UnCoding(cod);
	return 0;
}